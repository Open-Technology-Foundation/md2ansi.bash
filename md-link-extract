#!/usr/bin/env bash
# Extract links from markdown files
set -euo pipefail
shopt -s inherit_errexit shift_verbose extglob nullglob

SCRIPT_NAME=$(basename -- "$(readlink -en -- "$0")")
readonly -- SCRIPT_NAME

# Function to remove UTM parameters from URLs
remove_utm() {
  sed -E 's/\?utm_[^=]+=([^&]*)$//' |
  sed -E 's/(\?|&)utm_[^=]+=([^&]*)(&|$)/\1/g' |
  sed -E 's/(\?|&)$//'
  return 0
}

main() {
  local -a Files=()
  local -- file Refs ref url

  if (($#==0)) || [[ $1 == '-h' || $1 == '--help' ]]; then
    echo "Usage: $SCRIPT_NAME file [file...]"
    echo 'Extract links from text/markdown files'
    exit 0
  fi

  Files=($@)
  for file in "${Files[@]}"; do
    if [[ ! -f "$file" ]]; then
      >&2 echo "$SCRIPT_NAME: error: File '$file' not found."
      exit 1
    fi

    # Extract all types of links and process them
    { # Extract inline links [text](url)
      grep -o -E '\[.*?\]\(.*?\)' -- "$file" | sed -E 's/\[(.*?)\]\((.*?)\)/\2/' || true

      # Extract bare URLs <http://example.com>
      grep -o -E '<https?://[^>]+>' -- "$file" | sed -E 's/<(https?:\/\/[^>]+)>/\1/' || true

      # Extract reference-style links
      Refs=$(grep -o -E '\[.*?\]\[.*?\]' -- "$file" | sed -E 's/\[(.*?)\]\[(.*?)\]/\2/') || true
      while IFS= read -r ref; do
        [[ -n "$ref" ]] || continue
        url=$(grep -E "^\[$ref\]:" -- "$file" | sed -E 's/\[.*?\]:\s*(.*)/\1/') || true
        [[ -z "$url" ]] || echo "$url"
      done <<< "$Refs"
    } | remove_utm | sort | uniq
  done

}

main "$@"
#fin
